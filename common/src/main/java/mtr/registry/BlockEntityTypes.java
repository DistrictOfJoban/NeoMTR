package mtr.registry;

import mtr.Keys;
import mtr.MTR;
import mtr.loader.MTRRegistry;
import mtr.loader.MTRRegistryClient;
import mtr.block.*;
import mtr.data.PIDSType;
import mtr.mappings.BlockEntityMapper;
import mtr.render.*;
import net.minecraft.world.level.block.entity.BlockEntityType;

public class BlockEntityTypes {
	public static final RegistryObject<BlockEntityType<BlockArrivalProjector1Small.TileEntityArrivalProjector1Small>> ARRIVAL_PROJECTOR_1_SMALL_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockArrivalProjector1Small.TileEntityArrivalProjector1Small::new, Blocks.ARRIVAL_PROJECTOR_1_SMALL.get()));
	public static final RegistryObject<BlockEntityType<BlockArrivalProjector1Medium.TileEntityArrivalProjector1Medium>> ARRIVAL_PROJECTOR_1_MEDIUM_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockArrivalProjector1Medium.TileEntityArrivalProjector1Medium::new, Blocks.ARRIVAL_PROJECTOR_1_MEDIUM.get()));
	public static final RegistryObject<BlockEntityType<BlockArrivalProjector1Large.TileEntityArrivalProjector1Large>> ARRIVAL_PROJECTOR_1_LARGE_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockArrivalProjector1Large.TileEntityArrivalProjector1Large::new, Blocks.ARRIVAL_PROJECTOR_1_LARGE.get()));
	public static final RegistryObject<BlockEntityType<BlockNode.TileEntityBoatNode>> BOAT_NODE_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockNode.TileEntityBoatNode::new, Blocks.BOAT_NODE.get()));
	public static final RegistryObject<BlockEntityType<BlockClock.TileEntityClock>> CLOCK_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockClock.TileEntityClock::new, Blocks.CLOCK.get()));
	public static final RegistryObject<BlockEntityType<BlockLiftButtons.TileEntityLiftButtons>> LIFT_BUTTONS_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockLiftButtons.TileEntityLiftButtons::new, Blocks.LIFT_BUTTONS_1.get()));
	public static final RegistryObject<BlockEntityType<BlockLiftPanelEven1.TileEntityLiftPanelEven1>> LIFT_PANEL_EVEN_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockLiftPanelEven1.TileEntityLiftPanelEven1::new, Blocks.LIFT_PANEL_EVEN_1.get()));
	public static final RegistryObject<BlockEntityType<BlockLiftPanelOdd1.TileEntityLiftPanelOdd1>> LIFT_PANEL_ODD_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockLiftPanelOdd1.TileEntityLiftPanelOdd1::new, Blocks.LIFT_PANEL_ODD_1.get()));
	public static final RegistryObject<BlockEntityType<BlockLiftPanelEven2.TileEntityLiftPanelEven2>> LIFT_PANEL_EVEN_2_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockLiftPanelEven2.TileEntityLiftPanelEven2::new, Blocks.LIFT_PANEL_EVEN_2.get()));
	public static final RegistryObject<BlockEntityType<BlockLiftPanelOdd2.TileEntityLiftPanelOdd2>> LIFT_PANEL_ODD_2_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockLiftPanelOdd2.TileEntityLiftPanelOdd2::new, Blocks.LIFT_PANEL_ODD_2.get()));
	public static final RegistryObject<BlockEntityType<BlockLiftTrackFloor.TileEntityLiftTrackFloor>> LIFT_TRACK_FLOOR_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockLiftTrackFloor.TileEntityLiftTrackFloor::new, Blocks.LIFT_TRACK_FLOOR_1.get()));
	public static final RegistryObject<BlockEntityType<BlockLiftDoor.TileEntityLiftDoor>> LIFT_DOOR_EVEN_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockLiftDoor.TileEntityLiftDoor::new, Blocks.LIFT_DOOR_EVEN_1.get()));
	public static final RegistryObject<BlockEntityType<BlockLiftDoorOdd.TileEntityLiftDoorOdd>> LIFT_DOOR_ODD_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockLiftDoorOdd.TileEntityLiftDoorOdd::new, Blocks.LIFT_DOOR_ODD_1.get()));
	public static final RegistryObject<BlockEntityType<BlockPSDDoor.TileEntityPSDDoor>> PSD_DOOR_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockPSDDoor.TileEntityPSDDoor(0, pos, state), Blocks.PSD_DOOR_1.get()));
	public static final RegistryObject<BlockEntityType<BlockPSDDoor.TileEntityPSDDoor>> PSD_DOOR_2_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockPSDDoor.TileEntityPSDDoor(1, pos, state), Blocks.PSD_DOOR_2.get()));
	public static final RegistryObject<BlockEntityType<BlockPSDTop.TileEntityPSDTop>> PSD_TOP_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockPSDTop.TileEntityPSDTop::new, Blocks.PSD_TOP.get()));
	public static final RegistryObject<BlockEntityType<BlockAPGGlass.TileEntityAPGGlass>> APG_GLASS_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockAPGGlass.TileEntityAPGGlass::new, Blocks.APG_GLASS.get()));
	public static final RegistryObject<BlockEntityType<BlockAPGDoor.TileEntityAPGDoor>> APG_DOOR_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockAPGDoor.TileEntityAPGDoor::new, Blocks.APG_DOOR.get()));
	public static final RegistryObject<BlockEntityType<BlockPIDS1.TileEntityBlockPIDS1>> PIDS_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockPIDS1.TileEntityBlockPIDS1::new, Blocks.PIDS_1.get()));
	public static final RegistryObject<BlockEntityType<BlockPIDS2.TileEntityBlockPIDS2>> PIDS_2_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockPIDS2.TileEntityBlockPIDS2::new, Blocks.PIDS_2.get()));
	public static final RegistryObject<BlockEntityType<BlockPIDS3.TileEntityBlockPIDS3>> PIDS_3_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockPIDS3.TileEntityBlockPIDS3::new, Blocks.PIDS_3.get()));
	public static final RegistryObject<BlockEntityType<BlockPIDS4.TileEntityBlockPIDS4>> PIDS_4_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockPIDS4.TileEntityBlockPIDS4::new, Blocks.PIDS_4.get()));
	public static final RegistryObject<BlockEntityType<BlockPIDSSingleArrival1.TileEntityBlockPIDSSingleArrival1>> PIDS_SINGLE_ARRIVAL_1_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockPIDSSingleArrival1.TileEntityBlockPIDSSingleArrival1::new, Blocks.PIDS_SINGLE_ARRIVAL_1.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_2_EVEN_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(2, false, pos, state), Blocks.RAILWAY_SIGN_2_EVEN.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_2_ODD_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(2, true, pos, state), Blocks.RAILWAY_SIGN_2_ODD.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_3_EVEN_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(3, false, pos, state), Blocks.RAILWAY_SIGN_3_EVEN.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_3_ODD_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(3, true, pos, state), Blocks.RAILWAY_SIGN_3_ODD.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_4_EVEN_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(4, false, pos, state), Blocks.RAILWAY_SIGN_4_EVEN.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_4_ODD_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(4, true, pos, state), Blocks.RAILWAY_SIGN_4_ODD.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_5_EVEN_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(5, false, pos, state), Blocks.RAILWAY_SIGN_5_EVEN.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_5_ODD_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(5, true, pos, state), Blocks.RAILWAY_SIGN_5_ODD.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_6_EVEN_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(6, false, pos, state), Blocks.RAILWAY_SIGN_6_EVEN.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_6_ODD_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(6, true, pos, state), Blocks.RAILWAY_SIGN_6_ODD.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_7_EVEN_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(7, false, pos, state), Blocks.RAILWAY_SIGN_7_EVEN.get()));
	public static final RegistryObject<BlockEntityType<BlockRailwaySign.TileEntityRailwaySign>> RAILWAY_SIGN_7_ODD_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType((pos, state) -> new BlockRailwaySign.TileEntityRailwaySign(7, true, pos, state), Blocks.RAILWAY_SIGN_7_ODD.get()));
	public static final RegistryObject<BlockEntityType<BlockRouteSignStandingLight.TileEntityRouteSignStandingLight>> ROUTE_SIGN_STANDING_LIGHT_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockRouteSignStandingLight.TileEntityRouteSignStandingLight::new, Blocks.ROUTE_SIGN_STANDING_LIGHT.get()));
	public static final RegistryObject<BlockEntityType<BlockRouteSignStandingMetal.TileEntityRouteSignStandingMetal>> ROUTE_SIGN_STANDING_METAL_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockRouteSignStandingMetal.TileEntityRouteSignStandingMetal::new, Blocks.ROUTE_SIGN_STANDING_METAL.get()));
	public static final RegistryObject<BlockEntityType<BlockRouteSignWallLight.TileEntityRouteSignWallLight>> ROUTE_SIGN_WALL_LIGHT_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockRouteSignWallLight.TileEntityRouteSignWallLight::new, Blocks.ROUTE_SIGN_WALL_LIGHT.get()));
	public static final RegistryObject<BlockEntityType<BlockRouteSignWallMetal.TileEntityRouteSignWallMetal>> ROUTE_SIGN_WALL_METAL_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockRouteSignWallMetal.TileEntityRouteSignWallMetal::new, Blocks.ROUTE_SIGN_WALL_METAL.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalLight2Aspect1.TileEntitySignalLight2Aspect1>> SIGNAL_LIGHT_2_ASPECT_1 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalLight2Aspect1.TileEntitySignalLight2Aspect1::new, Blocks.SIGNAL_LIGHT_2_ASPECT_1.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalLight2Aspect2.TileEntitySignalLight2Aspect2>> SIGNAL_LIGHT_2_ASPECT_2 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalLight2Aspect2.TileEntitySignalLight2Aspect2::new, Blocks.SIGNAL_LIGHT_2_ASPECT_2.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalLight2Aspect3.TileEntitySignalLight2Aspect3>> SIGNAL_LIGHT_2_ASPECT_3 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalLight2Aspect3.TileEntitySignalLight2Aspect3::new, Blocks.SIGNAL_LIGHT_2_ASPECT_3.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalLight2Aspect4.TileEntitySignalLight2Aspect4>> SIGNAL_LIGHT_2_ASPECT_4 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalLight2Aspect4.TileEntitySignalLight2Aspect4::new, Blocks.SIGNAL_LIGHT_2_ASPECT_4.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalLight3Aspect1.TileEntitySignalLight3Aspect1>> SIGNAL_LIGHT_3_ASPECT_1 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalLight3Aspect1.TileEntitySignalLight3Aspect1::new, Blocks.SIGNAL_LIGHT_3_ASPECT_1.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalLight3Aspect2.TileEntitySignalLight3Aspect2>> SIGNAL_LIGHT_3_ASPECT_2 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalLight3Aspect2.TileEntitySignalLight3Aspect2::new, Blocks.SIGNAL_LIGHT_3_ASPECT_2.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalLight4Aspect1.TileEntitySignalLight4Aspect1>> SIGNAL_LIGHT_4_ASPECT_1 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalLight4Aspect1.TileEntitySignalLight4Aspect1::new, Blocks.SIGNAL_LIGHT_4_ASPECT_1.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalLight4Aspect2.TileEntitySignalLight4Aspect2>> SIGNAL_LIGHT_4_ASPECT_2 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalLight4Aspect2.TileEntitySignalLight4Aspect2::new, Blocks.SIGNAL_LIGHT_4_ASPECT_2.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalSemaphore1.TileEntitySignalSemaphore1>> SIGNAL_SEMAPHORE_1 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalSemaphore1.TileEntitySignalSemaphore1::new, Blocks.SIGNAL_SEMAPHORE_1.get()));
	public static final RegistryObject<BlockEntityType<BlockSignalSemaphore2.TileEntitySignalSemaphore2>> SIGNAL_SEMAPHORE_2 = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockSignalSemaphore2.TileEntitySignalSemaphore2::new, Blocks.SIGNAL_SEMAPHORE_2.get()));
	public static final RegistryObject<BlockEntityType<BlockStationNameEntrance.TileEntityStationNameEntrance>> STATION_NAME_ENTRANCE_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockStationNameEntrance.TileEntityStationNameEntrance::new, Blocks.STATION_NAME_ENTRANCE.get()));
	public static final RegistryObject<BlockEntityType<BlockStationNameWallWhite.TileEntityStationNameWallWhite>> STATION_NAME_WALL_WHITE_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockStationNameWallWhite.TileEntityStationNameWallWhite::new, Blocks.STATION_NAME_WALL_WHITE.get()));
	public static final RegistryObject<BlockEntityType<BlockStationNameWallGray.TileEntityStationNameWallGray>> STATION_NAME_WALL_GRAY_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockStationNameWallGray.TileEntityStationNameWallGray::new, Blocks.STATION_NAME_WALL_GRAY.get()));
	public static final RegistryObject<BlockEntityType<BlockStationNameWallBlack.TileEntityStationNameWallBlack>> STATION_NAME_WALL_BLACK_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockStationNameWallBlack.TileEntityStationNameWallBlack::new, Blocks.STATION_NAME_WALL_BLACK.get()));
	public static final RegistryObject<BlockEntityType<BlockStationNameTallBlock.TileEntityStationNameTallBlock>> STATION_NAME_TALL_BLOCK_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockStationNameTallBlock.TileEntityStationNameTallBlock::new, Blocks.STATION_NAME_TALL_BLOCK.get()));
	public static final RegistryObject<BlockEntityType<BlockStationNameTallBlockDoubleSided.TileEntityStationNameTallBlockDoubleSided>> STATION_NAME_TALL_BLOCK_DOUBLE_SIDED_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockStationNameTallBlockDoubleSided.TileEntityStationNameTallBlockDoubleSided::new, Blocks.STATION_NAME_TALL_BLOCK_DOUBLE_SIDED.get()));
	public static final RegistryObject<BlockEntityType<BlockStationNameTallWall.TileEntityStationNameTallWall>> STATION_NAME_TALL_WALL_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockStationNameTallWall.TileEntityStationNameTallWall::new, Blocks.STATION_NAME_TALL_WALL.get()));
	public static final RegistryObject<BlockEntityType<BlockTactileMap.TileEntityTactileMap>> TACTILE_MAP_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockTactileMap.TileEntityTactileMap::new, Blocks.TACTILE_MAP.get()));
	public static final RegistryObject<BlockEntityType<BlockTrainAnnouncer.TileEntityTrainAnnouncer>> TRAIN_ANNOUNCER_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockTrainAnnouncer.TileEntityTrainAnnouncer::new, Blocks.TRAIN_ANNOUNCER.get()));
	public static final RegistryObject<BlockEntityType<BlockTrainCargoLoader.TileEntityTrainCargoLoader>> TRAIN_CARGO_LOADER_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockTrainCargoLoader.TileEntityTrainCargoLoader::new, Blocks.TRAIN_CARGO_LOADER.get()));
	public static final RegistryObject<BlockEntityType<BlockTrainCargoUnloader.TileEntityTrainCargoUnloader>> TRAIN_CARGO_UNLOADER_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockTrainCargoUnloader.TileEntityTrainCargoUnloader::new, Blocks.TRAIN_CARGO_UNLOADER.get()));
	public static final RegistryObject<BlockEntityType<BlockTrainRedstoneSensor.TileEntityTrainRedstoneSensor>> TRAIN_REDSTONE_SENSOR_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockTrainRedstoneSensor.TileEntityTrainRedstoneSensor::new, Blocks.TRAIN_REDSTONE_SENSOR.get()));
	public static final RegistryObject<BlockEntityType<BlockTrainScheduleSensor.TileEntityTrainScheduleSensor>> TRAIN_SCHEDULE_SENSOR_TILE_ENTITY = new RegistryObject<>(() -> MTRRegistry.getBlockEntityType(BlockTrainScheduleSensor.TileEntityTrainScheduleSensor::new, Blocks.TRAIN_SCHEDULE_SENSOR.get()));

	public static void register() {
		MTRRegistry.registerBlockEntityType("lift_buttons_1", BlockEntityTypes.LIFT_BUTTONS_1_TILE_ENTITY);
		MTRRegistry.registerBlockEntityType("lift_panel_even_1", BlockEntityTypes.LIFT_PANEL_EVEN_1_TILE_ENTITY);
		MTRRegistry.registerBlockEntityType("lift_panel_odd_1", BlockEntityTypes.LIFT_PANEL_ODD_1_TILE_ENTITY);
		MTRRegistry.registerBlockEntityType("lift_panel_even_2", BlockEntityTypes.LIFT_PANEL_EVEN_2_TILE_ENTITY);
		MTRRegistry.registerBlockEntityType("lift_panel_odd_2", BlockEntityTypes.LIFT_PANEL_ODD_2_TILE_ENTITY);
		MTRRegistry.registerBlockEntityType("lift_track_floor_1", BlockEntityTypes.LIFT_TRACK_FLOOR_1_TILE_ENTITY);
		MTRRegistry.registerBlockEntityType("lift_door_1", BlockEntityTypes.LIFT_DOOR_EVEN_1_TILE_ENTITY);
		MTRRegistry.registerBlockEntityType("lift_door_odd_1", BlockEntityTypes.LIFT_DOOR_ODD_1_TILE_ENTITY);

		if (!Keys.LIFTS_ONLY) {
			MTRRegistry.registerBlockEntityType("arrival_projector_1_small", BlockEntityTypes.ARRIVAL_PROJECTOR_1_SMALL_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("arrival_projector_1_medium", BlockEntityTypes.ARRIVAL_PROJECTOR_1_MEDIUM_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("arrival_projector_1_large", BlockEntityTypes.ARRIVAL_PROJECTOR_1_LARGE_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("boat_node", BlockEntityTypes.BOAT_NODE_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("clock", BlockEntityTypes.CLOCK_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("psd_door_1", BlockEntityTypes.PSD_DOOR_1_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("psd_door_2", BlockEntityTypes.PSD_DOOR_2_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("psd_top", BlockEntityTypes.PSD_TOP_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("apg_glass", BlockEntityTypes.APG_GLASS_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("apg_door", BlockEntityTypes.APG_DOOR_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("pids_1", BlockEntityTypes.PIDS_1_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("pids_2", BlockEntityTypes.PIDS_2_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("pids_3", BlockEntityTypes.PIDS_3_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("pids_4", BlockEntityTypes.PIDS_4_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("pids_single_arrival_1", BlockEntityTypes.PIDS_SINGLE_ARRIVAL_1_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_2_even", BlockEntityTypes.RAILWAY_SIGN_2_EVEN_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_2_odd", BlockEntityTypes.RAILWAY_SIGN_2_ODD_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_3_even", BlockEntityTypes.RAILWAY_SIGN_3_EVEN_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_3_odd", BlockEntityTypes.RAILWAY_SIGN_3_ODD_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_4_even", BlockEntityTypes.RAILWAY_SIGN_4_EVEN_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_4_odd", BlockEntityTypes.RAILWAY_SIGN_4_ODD_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_5_even", BlockEntityTypes.RAILWAY_SIGN_5_EVEN_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_5_odd", BlockEntityTypes.RAILWAY_SIGN_5_ODD_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_6_even", BlockEntityTypes.RAILWAY_SIGN_6_EVEN_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_6_odd", BlockEntityTypes.RAILWAY_SIGN_6_ODD_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_7_even", BlockEntityTypes.RAILWAY_SIGN_7_EVEN_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("railway_sign_7_odd", BlockEntityTypes.RAILWAY_SIGN_7_ODD_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("route_sign_standing_light", BlockEntityTypes.ROUTE_SIGN_STANDING_LIGHT_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("route_sign_standing_metal", BlockEntityTypes.ROUTE_SIGN_STANDING_METAL_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("route_sign_wall_light", BlockEntityTypes.ROUTE_SIGN_WALL_LIGHT_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("route_sign_wall_metal", BlockEntityTypes.ROUTE_SIGN_WALL_METAL_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("signal_light_1", BlockEntityTypes.SIGNAL_LIGHT_2_ASPECT_1);
			MTRRegistry.registerBlockEntityType("signal_light_2", BlockEntityTypes.SIGNAL_LIGHT_2_ASPECT_2);
			MTRRegistry.registerBlockEntityType("signal_light_3", BlockEntityTypes.SIGNAL_LIGHT_2_ASPECT_3);
			MTRRegistry.registerBlockEntityType("signal_light_4", BlockEntityTypes.SIGNAL_LIGHT_2_ASPECT_4);
			MTRRegistry.registerBlockEntityType("signal_light_3_aspect_1", BlockEntityTypes.SIGNAL_LIGHT_3_ASPECT_1);
			MTRRegistry.registerBlockEntityType("signal_light_3_aspect_2", BlockEntityTypes.SIGNAL_LIGHT_3_ASPECT_2);
			MTRRegistry.registerBlockEntityType("signal_light_4_aspect_1", BlockEntityTypes.SIGNAL_LIGHT_4_ASPECT_1);
			MTRRegistry.registerBlockEntityType("signal_light_4_aspect_2", BlockEntityTypes.SIGNAL_LIGHT_4_ASPECT_2);
			MTRRegistry.registerBlockEntityType("signal_semaphore_1", BlockEntityTypes.SIGNAL_SEMAPHORE_1);
			MTRRegistry.registerBlockEntityType("signal_semaphore_2", BlockEntityTypes.SIGNAL_SEMAPHORE_2);
			MTRRegistry.registerBlockEntityType("station_name_entrance", BlockEntityTypes.STATION_NAME_ENTRANCE_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("station_name_wall", BlockEntityTypes.STATION_NAME_WALL_WHITE_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("station_name_wall_gray", BlockEntityTypes.STATION_NAME_WALL_GRAY_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("station_name_wall_black", BlockEntityTypes.STATION_NAME_WALL_BLACK_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("station_name_tall_block", BlockEntityTypes.STATION_NAME_TALL_BLOCK_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("station_name_tall_block_double_sided", BlockEntityTypes.STATION_NAME_TALL_BLOCK_DOUBLE_SIDED_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("station_name_tall_wall", BlockEntityTypes.STATION_NAME_TALL_WALL_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("tactile_map", BlockEntityTypes.TACTILE_MAP_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("train_announcer", BlockEntityTypes.TRAIN_ANNOUNCER_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("train_cargo_loader", BlockEntityTypes.TRAIN_CARGO_LOADER_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("train_cargo_unloader", BlockEntityTypes.TRAIN_CARGO_UNLOADER_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("train_redstone_sensor", BlockEntityTypes.TRAIN_REDSTONE_SENSOR_TILE_ENTITY);
			MTRRegistry.registerBlockEntityType("train_schedule_sensor", BlockEntityTypes.TRAIN_SCHEDULE_SENSOR_TILE_ENTITY);
		}
	}

	public static void registerClient() {
		if (!Keys.LIFTS_ONLY) {
			MTRRegistryClient.registerTileEntityRenderer(ARRIVAL_PROJECTOR_1_SMALL_TILE_ENTITY.get(), dispatcher -> new RenderPIDS<>(dispatcher, 12, 1, 1, 15, 16, 14, 14, false, false, PIDSType.ARRIVAL_PROJECTOR, 0xFF9900, 0xFF9900));
			MTRRegistryClient.registerTileEntityRenderer(ARRIVAL_PROJECTOR_1_MEDIUM_TILE_ENTITY.get(), dispatcher -> new RenderPIDS<>(dispatcher, 12, 1, -15, 15, 16, 30, 46, false, false, PIDSType.ARRIVAL_PROJECTOR, 0xFF9900, 0xFF9900));
			MTRRegistryClient.registerTileEntityRenderer(ARRIVAL_PROJECTOR_1_LARGE_TILE_ENTITY.get(), dispatcher -> new RenderPIDS<>(dispatcher, 16, 1, -15, 15, 16, 46, 46, false, false, PIDSType.ARRIVAL_PROJECTOR, 0xFF9900, 0xFF9900));
			MTRRegistryClient.registerTileEntityRenderer(BOAT_NODE_TILE_ENTITY.get(), RenderBoatNode::new);
			MTRRegistryClient.registerTileEntityRenderer(CLOCK_TILE_ENTITY.get(), RenderClock::new);
			MTRRegistryClient.registerTileEntityRenderer(PSD_DOOR_1_TILE_ENTITY.get(), dispatcher -> new RenderPSDAPGDoor<>(dispatcher, 0));
			MTRRegistryClient.registerTileEntityRenderer(PSD_DOOR_2_TILE_ENTITY.get(), dispatcher -> new RenderPSDAPGDoor<>(dispatcher, 1));
			MTRRegistryClient.registerTileEntityRenderer(PSD_TOP_TILE_ENTITY.get(), RenderPSDTop::new);
			MTRRegistryClient.registerTileEntityRenderer(APG_GLASS_TILE_ENTITY.get(), RenderAPGGlass::new);
			MTRRegistryClient.registerTileEntityRenderer(APG_DOOR_TILE_ENTITY.get(), dispatcher -> new RenderPSDAPGDoor<>(dispatcher, 2));
			MTRRegistryClient.registerTileEntityRenderer(PIDS_1_TILE_ENTITY.get(), dispatcher -> new RenderPIDS<>(dispatcher, BlockPIDS1.TileEntityBlockPIDS1.MAX_ARRIVALS, BlockPIDS1.TileEntityBlockPIDS1.LINES_PER_ARRIVAL, 1, 3.25F, 6, 2.5F, 30, true, false, PIDSType.PIDS, 0xFF9900, 0xFF9900));
			MTRRegistryClient.registerTileEntityRenderer(PIDS_2_TILE_ENTITY.get(), dispatcher -> new RenderPIDS<>(dispatcher, BlockPIDS2.TileEntityBlockPIDS2.MAX_ARRIVALS, BlockPIDS2.TileEntityBlockPIDS2.LINES_PER_ARRIVAL, 1.5F, 7.5F, 6, 6.5F, 29, true, true, PIDSType.PIDS, 0xFF9900, 0xFF9900));
			MTRRegistryClient.registerTileEntityRenderer(PIDS_3_TILE_ENTITY.get(), dispatcher -> new RenderPIDS<>(dispatcher, BlockPIDS3.TileEntityBlockPIDS3.MAX_ARRIVALS, BlockPIDS3.TileEntityBlockPIDS3.LINES_PER_ARRIVAL, 2.5F, 7.5F, 6, 6.5F, 27, true, false, PIDSType.PIDS, 0xFF9900, 0x33CC00, 1.25F, true));
			MTRRegistryClient.registerTileEntityRenderer(PIDS_4_TILE_ENTITY.get(), dispatcher -> new RenderPIDS<>(dispatcher, BlockPIDS4.TileEntityBlockPIDS4.MAX_ARRIVALS, BlockPIDS4.TileEntityBlockPIDS4.LINES_PER_ARRIVAL, 2F, 14F, 15, 28F, 12, false, false, PIDSType.PIDS_VERTICAL, 0xFF9900, 0xFF9900));
			MTRRegistryClient.registerTileEntityRenderer(PIDS_SINGLE_ARRIVAL_1_TILE_ENTITY.get(), dispatcher -> new RenderPIDS<>(dispatcher, BlockPIDSSingleArrival1.TileEntityBlockPIDSSingleArrival1.MAX_ARRIVALS, BlockPIDSSingleArrival1.TileEntityBlockPIDSSingleArrival1.LINES_PER_ARRIVAL, 2F, 14F, 15, 28F, 12, false, false, PIDSType.PIDS_SINGLE_ARRIVAL, 0xFF9900, 0xFF9900));
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_2_EVEN_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_2_ODD_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_3_EVEN_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_3_ODD_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_4_EVEN_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_4_ODD_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_5_EVEN_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_5_ODD_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_6_EVEN_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_6_ODD_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_7_EVEN_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(RAILWAY_SIGN_7_ODD_TILE_ENTITY.get(), RenderRailwaySign::new);
			MTRRegistryClient.registerTileEntityRenderer(ROUTE_SIGN_STANDING_LIGHT_TILE_ENTITY.get(), RenderRouteSign::new);
			MTRRegistryClient.registerTileEntityRenderer(ROUTE_SIGN_STANDING_METAL_TILE_ENTITY.get(), RenderRouteSign::new);
			MTRRegistryClient.registerTileEntityRenderer(ROUTE_SIGN_WALL_LIGHT_TILE_ENTITY.get(), RenderRouteSign::new);
			MTRRegistryClient.registerTileEntityRenderer(ROUTE_SIGN_WALL_METAL_TILE_ENTITY.get(), RenderRouteSign::new);
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_LIGHT_2_ASPECT_1.get(), dispatcher -> new RenderSignalLight2Aspect<>(dispatcher, true, false, 0xFF0000FF));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_LIGHT_2_ASPECT_2.get(), dispatcher -> new RenderSignalLight2Aspect<>(dispatcher, false, false, 0xFF0000FF));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_LIGHT_2_ASPECT_3.get(), dispatcher -> new RenderSignalLight2Aspect<>(dispatcher, true, true, 0xFF00FF00));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_LIGHT_2_ASPECT_4.get(), dispatcher -> new RenderSignalLight2Aspect<>(dispatcher, false, true, 0xFF00FF00));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_LIGHT_3_ASPECT_1.get(), dispatcher -> new RenderSignalLight3Aspect<>(dispatcher, true));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_LIGHT_3_ASPECT_2.get(), dispatcher -> new RenderSignalLight3Aspect<>(dispatcher, false));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_LIGHT_4_ASPECT_1.get(), dispatcher -> new RenderSignalLight4Aspect<>(dispatcher, true));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_LIGHT_4_ASPECT_2.get(), dispatcher -> new RenderSignalLight4Aspect<>(dispatcher, false));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_SEMAPHORE_1.get(), dispatcher -> new RenderSignalSemaphore<>(dispatcher, true));
			MTRRegistryClient.registerTileEntityRenderer(SIGNAL_SEMAPHORE_2.get(), dispatcher -> new RenderSignalSemaphore<>(dispatcher, false));
			MTRRegistryClient.registerTileEntityRenderer(STATION_NAME_ENTRANCE_TILE_ENTITY.get(), dispatcher -> new RenderStationNameTiled<>(dispatcher, true));
			MTRRegistryClient.registerTileEntityRenderer(STATION_NAME_TALL_BLOCK_TILE_ENTITY.get(), RenderStationNameTall::new);
			MTRRegistryClient.registerTileEntityRenderer(STATION_NAME_TALL_BLOCK_DOUBLE_SIDED_TILE_ENTITY.get(), RenderStationNameTall::new);
			MTRRegistryClient.registerTileEntityRenderer(STATION_NAME_TALL_WALL_TILE_ENTITY.get(), RenderStationNameTall::new);
			MTRRegistryClient.registerTileEntityRenderer(STATION_NAME_WALL_WHITE_TILE_ENTITY.get(), dispatcher -> new RenderStationNameTiled<>(dispatcher, false));
			MTRRegistryClient.registerTileEntityRenderer(STATION_NAME_WALL_GRAY_TILE_ENTITY.get(), dispatcher -> new RenderStationNameTiled<>(dispatcher, false));
			MTRRegistryClient.registerTileEntityRenderer(STATION_NAME_WALL_BLACK_TILE_ENTITY.get(), dispatcher -> new RenderStationNameTiled<>(dispatcher, false));
		}

		MTRRegistryClient.registerTileEntityRenderer(LIFT_BUTTONS_1_TILE_ENTITY.get(), RenderLiftButtons::new);
		MTRRegistryClient.registerTileEntityRenderer(LIFT_PANEL_EVEN_1_TILE_ENTITY.get(), dispatcher -> new RenderLiftPanel<>(dispatcher, false, false));
		MTRRegistryClient.registerTileEntityRenderer(LIFT_PANEL_ODD_1_TILE_ENTITY.get(), dispatcher -> new RenderLiftPanel<>(dispatcher, true, false));
		MTRRegistryClient.registerTileEntityRenderer(LIFT_PANEL_EVEN_2_TILE_ENTITY.get(), dispatcher -> new RenderLiftPanel<>(dispatcher, false, true));
		MTRRegistryClient.registerTileEntityRenderer(LIFT_PANEL_ODD_2_TILE_ENTITY.get(), dispatcher -> new RenderLiftPanel<>(dispatcher, true, true));
		MTRRegistryClient.registerTileEntityRenderer(LIFT_DOOR_EVEN_1_TILE_ENTITY.get(), dispatcher -> new RenderPSDAPGDoor<>(dispatcher, 3));
		MTRRegistryClient.registerTileEntityRenderer(LIFT_DOOR_ODD_1_TILE_ENTITY.get(), dispatcher -> new RenderPSDAPGDoor<>(dispatcher, 4));
	}
}
