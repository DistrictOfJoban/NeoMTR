package mtr.registry;

import mtr.Keys;
import mtr.MTR;
import mtr.RegistryClient;
import mtr.data.RailType;
import mtr.data.TransportMode;
import mtr.item.*;
import net.minecraft.world.item.DyeColor;
import net.minecraft.world.item.Item;

import java.util.function.BiConsumer;

public class Items {
	public static final RegistryObject<Item> APG_DOOR = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_DOOR, ItemPSDAPGBase.EnumPSDAPGType.APG));
	public static final RegistryObject<Item> APG_GLASS = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_GLASS, ItemPSDAPGBase.EnumPSDAPGType.APG));
	public static final RegistryObject<Item> APG_GLASS_END = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_GLASS_END, ItemPSDAPGBase.EnumPSDAPGType.APG));
	public static final RegistryObject<Item> BRUSH = new RegistryObject<>(() -> new ItemWithCreativeTabBase(Keys.LIFTS_ONLY ? CreativeModeTabs.ESCALATORS_LIFTS : CreativeModeTabs.CORE, properties -> properties.stacksTo(1)));
	public static final RegistryObject<Item> RAILWAY_DASHBOARD = new RegistryObject<>(() -> new ItemDashboard(TransportMode.TRAIN));
	public static final RegistryObject<Item> BOAT_DASHBOARD = new RegistryObject<>(() -> new ItemDashboard(TransportMode.BOAT));
	public static final RegistryObject<Item> CABLE_CAR_DASHBOARD = new RegistryObject<>(() -> new ItemDashboard(TransportMode.CABLE_CAR));
	public static final RegistryObject<Item> AIRPLANE_DASHBOARD = new RegistryObject<>(() -> new ItemDashboard(TransportMode.AIRPLANE));
	public static final RegistryObject<Item> DRIVER_KEY = new RegistryObject<>(() -> new ItemWithCreativeTabBase(CreativeModeTabs.CORE, properties -> properties.stacksTo(1)));
	public static final RegistryObject<Item> BOAT_NODE = new RegistryObject<>(() -> new ItemWithCreativeTabBase.ItemPlaceOnWater(CreativeModeTabs.CORE, Blocks.BOAT_NODE.get()));
	public static final RegistryObject<Item> ESCALATOR = new RegistryObject<>(ItemEscalator::new);
	public static final RegistryObject<Item> LIFT_BUTTONS_LINK_CONNECTOR = new RegistryObject<>(() -> new ItemLiftButtonsLinkModifier(true));
	public static final RegistryObject<Item> LIFT_BUTTONS_LINK_REMOVER = new RegistryObject<>(() -> new ItemLiftButtonsLinkModifier(false));
	public static final RegistryObject<Item> LIFT_DOOR_1 = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_DOOR, ItemPSDAPGBase.EnumPSDAPGType.LIFT_DOOR_1));
	public static final RegistryObject<Item> LIFT_DOOR_ODD_1 = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_DOOR, ItemPSDAPGBase.EnumPSDAPGType.LIFT_DOOR_ODD_1));
	public static final RegistryObject<Item> LIFT_REFRESHER = new RegistryObject<>(ItemLiftRefresher::new);
	public static final RegistryObject<Item> PSD_DOOR_1 = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_DOOR, ItemPSDAPGBase.EnumPSDAPGType.PSD_1));
	public static final RegistryObject<Item> PSD_GLASS_1 = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_GLASS, ItemPSDAPGBase.EnumPSDAPGType.PSD_1));
	public static final RegistryObject<Item> PSD_GLASS_END_1 = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_GLASS_END, ItemPSDAPGBase.EnumPSDAPGType.PSD_1));
	public static final RegistryObject<Item> PSD_DOOR_2 = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_DOOR, ItemPSDAPGBase.EnumPSDAPGType.PSD_2));
	public static final RegistryObject<Item> PSD_GLASS_2 = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_GLASS, ItemPSDAPGBase.EnumPSDAPGType.PSD_2));
	public static final RegistryObject<Item> PSD_GLASS_END_2 = new RegistryObject<>(() -> new ItemPSDAPGBase(ItemPSDAPGBase.EnumPSDAPGItem.PSD_APG_GLASS_END, ItemPSDAPGBase.EnumPSDAPGType.PSD_2));
	public static final RegistryObject<Item> RAIL_CONNECTOR_20 = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.WOODEN));
	public static final RegistryObject<Item> RAIL_CONNECTOR_20_ONE_WAY = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, true, RailType.WOODEN));
	public static final RegistryObject<Item> RAIL_CONNECTOR_40 = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.STONE));
	public static final RegistryObject<Item> RAIL_CONNECTOR_40_ONE_WAY = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, true, RailType.STONE));
	public static final RegistryObject<Item> RAIL_CONNECTOR_60 = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.EMERALD));
	public static final RegistryObject<Item> RAIL_CONNECTOR_60_ONE_WAY = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, true, RailType.EMERALD));
	public static final RegistryObject<Item> RAIL_CONNECTOR_80 = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.IRON));
	public static final RegistryObject<Item> RAIL_CONNECTOR_80_ONE_WAY = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, true, RailType.IRON));
	public static final RegistryObject<Item> RAIL_CONNECTOR_120 = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.OBSIDIAN));
	public static final RegistryObject<Item> RAIL_CONNECTOR_120_ONE_WAY = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, true, RailType.OBSIDIAN));
	public static final RegistryObject<Item> RAIL_CONNECTOR_160 = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.BLAZE));
	public static final RegistryObject<Item> RAIL_CONNECTOR_160_ONE_WAY = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, true, RailType.BLAZE));
	public static final RegistryObject<Item> RAIL_CONNECTOR_200 = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.QUARTZ));
	public static final RegistryObject<Item> RAIL_CONNECTOR_200_ONE_WAY = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, true, RailType.QUARTZ));
	public static final RegistryObject<Item> RAIL_CONNECTOR_300 = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.DIAMOND));
	public static final RegistryObject<Item> RAIL_CONNECTOR_300_ONE_WAY = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, true, RailType.DIAMOND));
	public static final RegistryObject<Item> RAIL_CONNECTOR_PLATFORM = new RegistryObject<>(() -> new ItemRailModifier(true, true, true, false, RailType.PLATFORM));
	public static final RegistryObject<Item> RAIL_CONNECTOR_SIDING = new RegistryObject<>(() -> new ItemRailModifier(true, true, true, false, RailType.SIDING));
	public static final RegistryObject<Item> RAIL_CONNECTOR_TURN_BACK = new RegistryObject<>(() -> new ItemRailModifier(true, false, true, false, RailType.TURN_BACK));
	public static final RegistryObject<Item> RAIL_CONNECTOR_CABLE_CAR = new RegistryObject<>(() -> new ItemRailModifier(false, true, false, true, RailType.CABLE_CAR));
	public static final RegistryObject<Item> RAIL_CONNECTOR_RUNWAY = new RegistryObject<>(() -> new ItemRailModifier(false, false, true, true, RailType.RUNWAY));
	public static final RegistryObject<Item> RAIL_REMOVER = new RegistryObject<>(ItemRailModifier::new);
	public static final RegistryObject<Item> RESOURCE_PACK_CREATOR = new RegistryObject<>(ItemResourcePackCreator::new);
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_WHITE = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.WHITE));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_ORANGE = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.ORANGE));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_MAGENTA = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.MAGENTA));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_LIGHT_BLUE = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.LIGHT_BLUE));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_YELLOW = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.YELLOW));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_LIME = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.LIME));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_PINK = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.PINK));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_GRAY = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.GRAY));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_LIGHT_GRAY = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.LIGHT_GRAY));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_CYAN = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.CYAN));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_PURPLE = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.PURPLE));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_BLUE = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.BLUE));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_BROWN = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.BROWN));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_GREEN = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.GREEN));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_RED = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.RED));
	public static final RegistryObject<Item> SIGNAL_CONNECTOR_BLACK = new RegistryObject<>(() -> new ItemSignalModifier(true, DyeColor.BLACK));
	public static final RegistryObject<Item> SIGNAL_REMOVER_WHITE = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.WHITE));
	public static final RegistryObject<Item> SIGNAL_REMOVER_ORANGE = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.ORANGE));
	public static final RegistryObject<Item> SIGNAL_REMOVER_MAGENTA = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.MAGENTA));
	public static final RegistryObject<Item> SIGNAL_REMOVER_LIGHT_BLUE = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.LIGHT_BLUE));
	public static final RegistryObject<Item> SIGNAL_REMOVER_YELLOW = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.YELLOW));
	public static final RegistryObject<Item> SIGNAL_REMOVER_LIME = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.LIME));
	public static final RegistryObject<Item> SIGNAL_REMOVER_PINK = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.PINK));
	public static final RegistryObject<Item> SIGNAL_REMOVER_GRAY = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.GRAY));
	public static final RegistryObject<Item> SIGNAL_REMOVER_LIGHT_GRAY = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.LIGHT_GRAY));
	public static final RegistryObject<Item> SIGNAL_REMOVER_CYAN = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.CYAN));
	public static final RegistryObject<Item> SIGNAL_REMOVER_PURPLE = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.PURPLE));
	public static final RegistryObject<Item> SIGNAL_REMOVER_BLUE = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.BLUE));
	public static final RegistryObject<Item> SIGNAL_REMOVER_BROWN = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.BROWN));
	public static final RegistryObject<Item> SIGNAL_REMOVER_GREEN = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.GREEN));
	public static final RegistryObject<Item> SIGNAL_REMOVER_RED = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.RED));
	public static final RegistryObject<Item> SIGNAL_REMOVER_BLACK = new RegistryObject<>(() -> new ItemSignalModifier(false, DyeColor.BLACK));
	public static final RegistryObject<Item> BRIDGE_CREATOR_3 = new RegistryObject<>(() -> new ItemBridgeCreator(3));
	public static final RegistryObject<Item> BRIDGE_CREATOR_5 = new RegistryObject<>(() -> new ItemBridgeCreator(5));
	public static final RegistryObject<Item> BRIDGE_CREATOR_7 = new RegistryObject<>(() -> new ItemBridgeCreator(7));
	public static final RegistryObject<Item> BRIDGE_CREATOR_9 = new RegistryObject<>(() -> new ItemBridgeCreator(9));
	public static final RegistryObject<Item> TUNNEL_CREATOR_4_3 = new RegistryObject<>(() -> new ItemTunnelCreator(4, 3));
	public static final RegistryObject<Item> TUNNEL_CREATOR_4_5 = new RegistryObject<>(() -> new ItemTunnelCreator(4, 5));
	public static final RegistryObject<Item> TUNNEL_CREATOR_4_7 = new RegistryObject<>(() -> new ItemTunnelCreator(4, 7));
	public static final RegistryObject<Item> TUNNEL_CREATOR_4_9 = new RegistryObject<>(() -> new ItemTunnelCreator(4, 9));
	public static final RegistryObject<Item> TUNNEL_CREATOR_5_3 = new RegistryObject<>(() -> new ItemTunnelCreator(5, 3));
	public static final RegistryObject<Item> TUNNEL_CREATOR_5_5 = new RegistryObject<>(() -> new ItemTunnelCreator(5, 5));
	public static final RegistryObject<Item> TUNNEL_CREATOR_5_7 = new RegistryObject<>(() -> new ItemTunnelCreator(5, 7));
	public static final RegistryObject<Item> TUNNEL_CREATOR_5_9 = new RegistryObject<>(() -> new ItemTunnelCreator(5, 9));
	public static final RegistryObject<Item> TUNNEL_CREATOR_6_3 = new RegistryObject<>(() -> new ItemTunnelCreator(6, 3));
	public static final RegistryObject<Item> TUNNEL_CREATOR_6_5 = new RegistryObject<>(() -> new ItemTunnelCreator(6, 5));
	public static final RegistryObject<Item> TUNNEL_CREATOR_6_7 = new RegistryObject<>(() -> new ItemTunnelCreator(6, 7));
	public static final RegistryObject<Item> TUNNEL_CREATOR_6_9 = new RegistryObject<>(() -> new ItemTunnelCreator(6, 9));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_4_3 = new RegistryObject<>(() -> new ItemTunnelWallCreator(4, 3));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_4_5 = new RegistryObject<>(() -> new ItemTunnelWallCreator(4, 5));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_4_7 = new RegistryObject<>(() -> new ItemTunnelWallCreator(4, 7));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_4_9 = new RegistryObject<>(() -> new ItemTunnelWallCreator(4, 9));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_5_3 = new RegistryObject<>(() -> new ItemTunnelWallCreator(5, 3));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_5_5 = new RegistryObject<>(() -> new ItemTunnelWallCreator(5, 5));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_5_7 = new RegistryObject<>(() -> new ItemTunnelWallCreator(5, 7));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_5_9 = new RegistryObject<>(() -> new ItemTunnelWallCreator(5, 9));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_6_3 = new RegistryObject<>(() -> new ItemTunnelWallCreator(6, 3));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_6_5 = new RegistryObject<>(() -> new ItemTunnelWallCreator(6, 5));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_6_7 = new RegistryObject<>(() -> new ItemTunnelWallCreator(6, 7));
	public static final RegistryObject<Item> TUNNEL_WALL_CREATOR_6_9 = new RegistryObject<>(() -> new ItemTunnelWallCreator(6, 9));

	public static void register(MTR.RegisterCallback<RegistryObject<Item>> registerCallback) {
		registerCallback.register("brush", Items.BRUSH);
		registerCallback.register("escalator", Items.ESCALATOR);
		registerCallback.register("lift_buttons_link_connector", Items.LIFT_BUTTONS_LINK_CONNECTOR);
		registerCallback.register("lift_buttons_link_remover", Items.LIFT_BUTTONS_LINK_REMOVER);
		registerCallback.register("lift_door_1", Items.LIFT_DOOR_1);
		registerCallback.register("lift_door_odd_1", Items.LIFT_DOOR_ODD_1);
		registerCallback.register("lift_refresher", Items.LIFT_REFRESHER);

		if(!Keys.LIFTS_ONLY) {
			registerCallback.register("apg_door", Items.APG_DOOR);
			registerCallback.register("apg_glass", Items.APG_GLASS);
			registerCallback.register("apg_glass_end", Items.APG_GLASS_END);
			registerCallback.register("dashboard", Items.RAILWAY_DASHBOARD);
			registerCallback.register("dashboard_2", Items.BOAT_DASHBOARD);
			registerCallback.register("dashboard_3", Items.CABLE_CAR_DASHBOARD);
			registerCallback.register("dashboard_4", Items.AIRPLANE_DASHBOARD);
			registerCallback.register("driver_key", Items.DRIVER_KEY);
			registerCallback.register("psd_door", Items.PSD_DOOR_1);
			registerCallback.register("psd_glass", Items.PSD_GLASS_1);
			registerCallback.register("psd_glass_end", Items.PSD_GLASS_END_1);
			registerCallback.register("psd_door_2", Items.PSD_DOOR_2);
			registerCallback.register("psd_glass_2", Items.PSD_GLASS_2);
			registerCallback.register("psd_glass_end_2", Items.PSD_GLASS_END_2);
			registerCallback.register("rail_connector_20", Items.RAIL_CONNECTOR_20);
			registerCallback.register("rail_connector_20_one_way", Items.RAIL_CONNECTOR_20_ONE_WAY);
			registerCallback.register("rail_connector_40", Items.RAIL_CONNECTOR_40);
			registerCallback.register("rail_connector_40_one_way", Items.RAIL_CONNECTOR_40_ONE_WAY);
			registerCallback.register("rail_connector_60", Items.RAIL_CONNECTOR_60);
			registerCallback.register("rail_connector_60_one_way", Items.RAIL_CONNECTOR_60_ONE_WAY);
			registerCallback.register("rail_connector_80", Items.RAIL_CONNECTOR_80);
			registerCallback.register("rail_connector_80_one_way", Items.RAIL_CONNECTOR_80_ONE_WAY);
			registerCallback.register("rail_connector_120", Items.RAIL_CONNECTOR_120);
			registerCallback.register("rail_connector_120_one_way", Items.RAIL_CONNECTOR_120_ONE_WAY);
			registerCallback.register("rail_connector_160", Items.RAIL_CONNECTOR_160);
			registerCallback.register("rail_connector_160_one_way", Items.RAIL_CONNECTOR_160_ONE_WAY);
			registerCallback.register("rail_connector_200", Items.RAIL_CONNECTOR_200);
			registerCallback.register("rail_connector_200_one_way", Items.RAIL_CONNECTOR_200_ONE_WAY);
			registerCallback.register("rail_connector_300", Items.RAIL_CONNECTOR_300);
			registerCallback.register("rail_connector_300_one_way", Items.RAIL_CONNECTOR_300_ONE_WAY);
			registerCallback.register("rail_connector_platform", Items.RAIL_CONNECTOR_PLATFORM);
			registerCallback.register("rail_connector_siding", Items.RAIL_CONNECTOR_SIDING);
			registerCallback.register("rail_connector_turn_back", Items.RAIL_CONNECTOR_TURN_BACK);
			registerCallback.register("rail_connector_cable_car", Items.RAIL_CONNECTOR_CABLE_CAR);
			registerCallback.register("rail_connector_runway", Items.RAIL_CONNECTOR_RUNWAY);
			registerCallback.register("rail_remover", Items.RAIL_REMOVER);
			registerCallback.register("resource_pack_creator", Items.RESOURCE_PACK_CREATOR);
			registerCallback.register("signal_connector_white", Items.SIGNAL_CONNECTOR_WHITE);
			registerCallback.register("signal_connector_orange", Items.SIGNAL_CONNECTOR_ORANGE);
			registerCallback.register("signal_connector_magenta", Items.SIGNAL_CONNECTOR_MAGENTA);
			registerCallback.register("signal_connector_light_blue", Items.SIGNAL_CONNECTOR_LIGHT_BLUE);
			registerCallback.register("signal_connector_yellow", Items.SIGNAL_CONNECTOR_YELLOW);
			registerCallback.register("signal_connector_lime", Items.SIGNAL_CONNECTOR_LIME);
			registerCallback.register("signal_connector_pink", Items.SIGNAL_CONNECTOR_PINK);
			registerCallback.register("signal_connector_gray", Items.SIGNAL_CONNECTOR_GRAY);
			registerCallback.register("signal_connector_light_gray", Items.SIGNAL_CONNECTOR_LIGHT_GRAY);
			registerCallback.register("signal_connector_cyan", Items.SIGNAL_CONNECTOR_CYAN);
			registerCallback.register("signal_connector_purple", Items.SIGNAL_CONNECTOR_PURPLE);
			registerCallback.register("signal_connector_blue", Items.SIGNAL_CONNECTOR_BLUE);
			registerCallback.register("signal_connector_brown", Items.SIGNAL_CONNECTOR_BROWN);
			registerCallback.register("signal_connector_green", Items.SIGNAL_CONNECTOR_GREEN);
			registerCallback.register("signal_connector_red", Items.SIGNAL_CONNECTOR_RED);
			registerCallback.register("signal_connector_black", Items.SIGNAL_CONNECTOR_BLACK);
			registerCallback.register("signal_remover_white", Items.SIGNAL_REMOVER_WHITE);
			registerCallback.register("signal_remover_orange", Items.SIGNAL_REMOVER_ORANGE);
			registerCallback.register("signal_remover_magenta", Items.SIGNAL_REMOVER_MAGENTA);
			registerCallback.register("signal_remover_light_blue", Items.SIGNAL_REMOVER_LIGHT_BLUE);
			registerCallback.register("signal_remover_yellow", Items.SIGNAL_REMOVER_YELLOW);
			registerCallback.register("signal_remover_lime", Items.SIGNAL_REMOVER_LIME);
			registerCallback.register("signal_remover_pink", Items.SIGNAL_REMOVER_PINK);
			registerCallback.register("signal_remover_gray", Items.SIGNAL_REMOVER_GRAY);
			registerCallback.register("signal_remover_light_gray", Items.SIGNAL_REMOVER_LIGHT_GRAY);
			registerCallback.register("signal_remover_cyan", Items.SIGNAL_REMOVER_CYAN);
			registerCallback.register("signal_remover_purple", Items.SIGNAL_REMOVER_PURPLE);
			registerCallback.register("signal_remover_blue", Items.SIGNAL_REMOVER_BLUE);
			registerCallback.register("signal_remover_brown", Items.SIGNAL_REMOVER_BROWN);
			registerCallback.register("signal_remover_green", Items.SIGNAL_REMOVER_GREEN);
			registerCallback.register("signal_remover_red", Items.SIGNAL_REMOVER_RED);
			registerCallback.register("signal_remover_black", Items.SIGNAL_REMOVER_BLACK);
			registerCallback.register("bridge_creator_3", Items.BRIDGE_CREATOR_3);
			registerCallback.register("bridge_creator_5", Items.BRIDGE_CREATOR_5);
			registerCallback.register("bridge_creator_7", Items.BRIDGE_CREATOR_7);
			registerCallback.register("bridge_creator_9", Items.BRIDGE_CREATOR_9);
			registerCallback.register("tunnel_creator_4_3", Items.TUNNEL_CREATOR_4_3);
			registerCallback.register("tunnel_creator_4_5", Items.TUNNEL_CREATOR_4_5);
			registerCallback.register("tunnel_creator_4_7", Items.TUNNEL_CREATOR_4_7);
			registerCallback.register("tunnel_creator_4_9", Items.TUNNEL_CREATOR_4_9);
			registerCallback.register("tunnel_creator_5_3", Items.TUNNEL_CREATOR_5_3);
			registerCallback.register("tunnel_creator_5_5", Items.TUNNEL_CREATOR_5_5);
			registerCallback.register("tunnel_creator_5_7", Items.TUNNEL_CREATOR_5_7);
			registerCallback.register("tunnel_creator_5_9", Items.TUNNEL_CREATOR_5_9);
			registerCallback.register("tunnel_creator_6_3", Items.TUNNEL_CREATOR_6_3);
			registerCallback.register("tunnel_creator_6_5", Items.TUNNEL_CREATOR_6_5);
			registerCallback.register("tunnel_creator_6_7", Items.TUNNEL_CREATOR_6_7);
			registerCallback.register("tunnel_creator_6_9", Items.TUNNEL_CREATOR_6_9);
			registerCallback.register("tunnel_wall_creator_4_3", Items.TUNNEL_WALL_CREATOR_4_3);
			registerCallback.register("tunnel_wall_creator_4_5", Items.TUNNEL_WALL_CREATOR_4_5);
			registerCallback.register("tunnel_wall_creator_4_7", Items.TUNNEL_WALL_CREATOR_4_7);
			registerCallback.register("tunnel_wall_creator_4_9", Items.TUNNEL_WALL_CREATOR_4_9);
			registerCallback.register("tunnel_wall_creator_5_3", Items.TUNNEL_WALL_CREATOR_5_3);
			registerCallback.register("tunnel_wall_creator_5_5", Items.TUNNEL_WALL_CREATOR_5_5);
			registerCallback.register("tunnel_wall_creator_5_7", Items.TUNNEL_WALL_CREATOR_5_7);
			registerCallback.register("tunnel_wall_creator_5_9", Items.TUNNEL_WALL_CREATOR_5_9);
			registerCallback.register("tunnel_wall_creator_6_3", Items.TUNNEL_WALL_CREATOR_6_3);
			registerCallback.register("tunnel_wall_creator_6_5", Items.TUNNEL_WALL_CREATOR_6_5);
			registerCallback.register("tunnel_wall_creator_6_7", Items.TUNNEL_WALL_CREATOR_6_7);
			registerCallback.register("tunnel_wall_creator_6_9", Items.TUNNEL_WALL_CREATOR_6_9);
			registerCallback.register("boat_node", Items.BOAT_NODE);
		}
	}

    public static void initItemModelPredicate() {
		RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", LIFT_BUTTONS_LINK_CONNECTOR.get(), ItemBlockClickingBase.TAG_POS);
		RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", LIFT_BUTTONS_LINK_REMOVER.get(), ItemBlockClickingBase.TAG_POS);

        if (!Keys.LIFTS_ONLY) {
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_20.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_20_ONE_WAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_40.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_40_ONE_WAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_60.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_60_ONE_WAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_80.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_80_ONE_WAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_120.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_120_ONE_WAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_160.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_160_ONE_WAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_200.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_200_ONE_WAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_300.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_300_ONE_WAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_PLATFORM.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_SIDING.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_TURN_BACK.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_CABLE_CAR.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_CONNECTOR_RUNWAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", RAIL_REMOVER.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_WHITE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_ORANGE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_MAGENTA.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_LIGHT_BLUE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_YELLOW.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_LIME.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_PINK.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_GRAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_LIGHT_GRAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_CYAN.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_PURPLE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_BLUE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_BROWN.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_GREEN.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_RED.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_CONNECTOR_BLACK.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_WHITE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_ORANGE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_MAGENTA.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_LIGHT_BLUE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_YELLOW.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_LIME.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_PINK.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_GRAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_LIGHT_GRAY.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_CYAN.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_PURPLE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_BLUE.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_BROWN.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_GREEN.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_RED.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", SIGNAL_REMOVER_BLACK.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", BRIDGE_CREATOR_3.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", BRIDGE_CREATOR_5.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", BRIDGE_CREATOR_7.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", BRIDGE_CREATOR_9.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_4_3.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_4_5.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_4_7.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_4_9.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_5_3.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_5_5.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_5_7.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_5_9.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_6_3.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_6_5.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_6_7.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_CREATOR_6_9.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_4_3.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_4_5.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_4_7.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_4_9.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_5_3.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_5_5.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_5_7.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_5_9.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_6_3.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_6_5.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_6_7.get(), ItemBlockClickingBase.TAG_POS);
            RegistryClient.registerItemModelPredicate(MTR.MOD_ID + ":selected", TUNNEL_WALL_CREATOR_6_9.get(), ItemBlockClickingBase.TAG_POS);
        }

    }
}
